services:
  postgres:
    image: postgres:15-alpine
    container_name: backlogus-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: backlogus_db
      POSTGRES_USER: backlogus_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-backlogus_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backlogus-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U backlogus_user -d backlogus_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backlogus-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://backlogus_user:${DB_PASSWORD:-backlogus_password}@postgres:5432/backlogus_db
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      NODE_ENV: production
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backlogus-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: backlogus-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - backlogus-network

volumes:
  postgres_data:

networks:
  backlogus-network:
    driver: bridge
